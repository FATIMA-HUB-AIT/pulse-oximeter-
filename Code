#include <Wire.h>
#include "MAX30100_PulseOximeter.h"
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

#define SCREEN_WIDTH 128
#define SCREEN_HEIGHT 64
#define OLED_RESET    -1
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);

#define REPORTING_PERIOD_MS 1000  // Time between data reporting (1 second)

PulseOximeter pox;
uint32_t tsLastReport = 0;

void setup() {
  Serial.begin(115200);

  // Initialize the OLED display
  if(!display.begin(SSD1306_SWITCHCAPVCC, 0x3C)) {
    Serial.println("OLED display initialization failed");
    while(true);
  }
  display.clearDisplay();
  display.setTextSize(1);
  display.setTextColor(SSD1306_WHITE);
  display.setCursor(0, 0);
  display.println("Initializing...");
  display.display();

  // Initialize the PulseOximeter sensor
  Serial.println("Initializing pulse oximeter...");
  if (!pox.begin()) {
    Serial.println("FAILED to initialize pulse oximeter sensor");
    display.println("Failed to initialize sensor!");
    display.display();
    while (true);
  } else {
    Serial.println("Pulse oximeter initialized successfully");
    display.clearDisplay();
    display.setCursor(0, 0);
    display.println("Sensor ready...");
    display.display();
  }
}

void loop() {
  // Update the sensor data
  pox.update();

  // Report the sensor values every 1 second
  if (millis() - tsLastReport > REPORTING_PERIOD_MS) {
    tsLastReport = millis();

    // Get the heart rate and SpO2 values
    float heartRate = pox.getHeartRate();
    float SpO2 = pox.getSpO2();

    // Only proceed if valid data is detected
    if (heartRate > 40 && heartRate < 180) { // Basic range check for realistic BPM
      // Apply a basic moving average filter to smooth out the heart rate
      static float smoothedHeartRate = heartRate; // Initialize with the first reading
      smoothedHeartRate = (0.9 * smoothedHeartRate) + (0.1 * heartRate); // Smoothing

      // Serial output to monitor
      Serial.print("Heart Rate: ");
      Serial.print(smoothedHeartRate);
      Serial.print(" BPM | SpO2: ");
      Serial.print(SpO2);
      Serial.println(" %");

      // Display smoothed values on the OLED screen
      display.clearDisplay();
      display.setCursor(0, 0);
      display.println("Pulse Oximeter");
      display.print("Heart Rate: ");
      display.print(smoothedHeartRate);
      display.println(" BPM");
      display.print("SpO2: ");
      display.print(SpO2);
      display.println(" %");
      display.display();
    } else {
      Serial.println("Invalid data. Ensure finger is on the sensor.");
      display.clearDisplay();
      display.setCursor(0, 0);
      display.println("Waiting for data...");
      display.display();
    }
  }

  delay(100); // Reduced delay for responsiveness
}
